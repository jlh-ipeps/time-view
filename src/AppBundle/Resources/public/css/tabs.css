
/**
 * tab panel widget
 */
.tabPanel-widget {
  position: relative;  /* containing block for headings (top:0) */
  margin-bottom: 10px;
}

/**
 * because h3s come first in source order - we use z-index to move them in front of the headings
 */
.tabPanel-widget > h3 {
  position: absolute;
/*  z-index: 1;*/
}

/**
 * h3s and headings must share same values so grouping declarations in this rule prevents async edits (risk of breakage)
 * line-height == height -> vertical centering
 * the width dictates the offset for all headings but the first one: left offset = width * number of previous heading(s)
 * note that width and offset of h3/heading pair can be customized if necessary
 */

.tabPanel-widget > h3 {
  font-weight: bold;
  font-size: 1.1em;
  width: 150px;
  height: 2.5em;
  line-height: 2.1em;
}

/**
 * position:relative is important to fixe the div to the right place
 */
.tabPanel-widget > h3 {
  position: relative;
  margin: 0;
  text-align: center;
  background-color: #222;
  color: #999;
  border-bottom: solid 4px #555;
  border-right: 1px solid #111;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
}
.tabPanel-widget > h3:first-child {
  border-left: 1px solid #333;
}

/**
 * all first level h3s and headings after the very first ones
 */
.tabPanel-widget > h3 ~ h3 {
  position: absolute;
  top: 0;
}

/**
 * We target all the h3/heading pairs
 * we increment the :nth-child() params by 4 as well as the left value (according to "tab" width)
 */
.tabPanel-widget #tab-1 ~ i ~ h3 {
  left: 0;
}
.tabPanel-widget #tab-2 ~ i ~ h3 {
  left: 150px;
}
.tabPanel-widget #tab-3 ~ i ~ h3 {
  left: 300px;
}
.tabPanel-widget #tab-4 ~ i ~ h3 {
  left: 450px;
}
.tabPanel-widget #tab-1 {
    left: 0;
}
.tabPanel-widget #tab-2 {
    left: 150px;
}
.tabPanel-widget #tab-3 {
    left: 300px;
}
.tabPanel-widget #tab-4 {
    left: 450px;
}

/**
 * we visually hide all the panels
 * https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html
 */
.tabPanel-widget .tab-content {
  position: absolute !important;
  clip: rect(1px, 1px, 1px, 1px);
  padding:10px 0 !important;
  border:0 !important;
  height: 1px !important;
  width: 1px !important;
/*  overflow: hidden;*/
}
/**
 * we reveal a panel depending on which control is selected
 */
.tabPanel-widget input:checked + i + h3 + div {
  position: static !important;
  height: auto !important;
  width: auto !important;
  border-bottom: solid 4px #555 !important;
}

/**
 * shows a hand cursor only to pointing device users
 */
.tabPanel-widget h3:hover {
  cursor: pointer;
}


/**
 * we hide radio buttons and also remove them from the flow
 */
.tabPanel-widget input[name="tabs"] {
  opacity: 0;
  z-index: 1;
  position: absolute;
  top: 0;
  width: 150px;
  height: 2.5em;
  cursor: pointer;
}


/**
 * this is to style the tabs when they get focus (visual cue)
 */

.tabPanel-widget input[name="tabs"]:focus + h3 {
  outline: 1px dotted #000;
  outline-offset: 10px;
}


/**
 * reset of the above within the tab panel (for pointing-device users)
 */
.tabPanel-widget:hover h3 {
  outline: none !important;
}

/**
 * visual cue of the selection
 */
.tabPanel-widget input[name="tabs"]:checked + i + h3 {
  background: #333;
  color: #fa0;
  border-bottom: solid 4px #fa0;
}

.tabPanel-widget input + i:before,
.tabPanel-widget input + i:after {
  display: none;
}

/**
 * Make it accordion below 45em (stack everything)
 */
@media screen and (max-width: 960px) {

      /* use the whole width */
    #page-content-wrapper .col-lg-12 {
        padding-right: 2px;
        padding-left: 2px;
    }
      /* style the heading */
    .tabPanel-widget h3 {
        position: static !important;
        margin-top: -30px;
        width: 100%;
        border-left: none;
        border-right: none;
    }
    .tabPanel-widget input {
        position: static !important;
        width: 100% !important;
    }
    
    

  /* "kill" the marker
  .tabPanel-widget h3:after {
    display: none !important;
  } */

}


/***** UP and DOWN ARROW *****/
/* only down arrows is usefull for radio accordion */
/* to correct later if I have time */
/*
.tabPanel-widget input + i:before,
.tabPanel-widget input + i:after {
  display: inline;
  transition: all 0.25s ease-in-out;
}
.tabPanel-widget input + i {
  position: absolute;
  transform: translate(-6px, 0);
  margin-top: 5px;
  margin-right: 15px;
  right: 0;
}
.tabPanel-widget input + i:before,
.tabPanel-widget input + i:after {
  content: "";
  position: absolute;
  background-color: #eee;
  width: 3px;
  height: 9px;
}
.tabPanel-widget input + i:before {
  transform: translate(2px, 0) rotate(45deg);
}
.tabPanel-widget input + i:after {
  transform: translate(-2px, 0) rotate(-45deg);
}
.tabPanel-widget input[type=radio]:checked + i:before {
  transform: translate(-2px, 0) rotate(45deg);
}
.tabPanel-widget input[type=radio]:checked + i:after {
  transform: translate(2px, 0) rotate(-45deg);
}
*/